"use strict";!function(){var e=document.querySelector(".other-services__swiper"),t=document.querySelector(".other-services__list"),n=parseInt(getComputedStyle(e).width),r=parseInt(getComputedStyle(t).width);window.onload=function(){var t=getComputedStyle(e).height;e.style.height="".concat(parseInt(t)+40,"px")},t.style.marginLeft="0px",e.addEventListener("mousedown",function(s){e.addEventListener("mouseleave",function(){e.removeEventListener("mousemove",u)}),e.addEventListener("mouseup",function s(c){if(e.removeEventListener("mousemove",u),l>=100){var m=(l=l>r-n?r-n:l)/1.5,f=c.pageX;switch(i=f<o?"left":"right",a=parseInt(t.style.marginLeft),i){case"left":if(-a>=r-n)return;m=m>r-n+a?r-n+a:m,t.style.transition="all 0.35s",t.style.marginLeft="".concat(a-m,"px");break;case"right":if(a>=0)return;m=m>-a?-a:m,t.style.transition="all 0.35s",t.style.marginLeft="".concat(a+m,"px")}setTimeout(function(){t.style.transition="all 0s"},250),e.removeEventListener("mouseup",s)}});var i,a,o=s.pageX,c=s.pageX,l=0;function u(e){var s=e.pageX,o=Math.abs(c-s);switch(a=parseInt(t.style.marginLeft),s<c?i="left":s>c?i="right":(s=c)&&(i=i),i){case"left":if(-a>=r-n)return;t.style.marginLeft="".concat(a-o,"px");break;case"right":if(a>=0)return;t.style.marginLeft="".concat(a+o,"px")}l+=o,c=s}e.addEventListener("mousemove",u)})}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
